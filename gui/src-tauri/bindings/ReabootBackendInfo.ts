// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { ReaperPlatform } from "./ReaperPlatform";

/**
 * Basic configuration-independent information gathered by the backend.
 */
export type ReabootBackendInfo = { 
/**
 * Resource directory of the main REAPER installation.
 *
 * If `None`, that means it couldn't be determined for some reason. Should be rare.
 */
main_reaper_resource_dir?: string, 
/**
 * Whether "reaper.ini" exists in that resource directory.
 */
main_reaper_ini_exists: boolean, 
/**
 * Path of the executable belonging to this installation.
 *
 * If this is a portable installation, this corresponds to the REAPER executable in the
 * portable directory (or `REAPER.app` bundle on macOS).
 *
 * If this is a main installation, this corresponds to the system-wide REAPER executable
 * created by a default REAPER installation. On Linux, this first tries the system-wide
 * location (`/opt/REAPER`) and then the user location (`$HOME/opt/reaper`).
 * install locations.
 */
main_reaper_exe: string, 
/**
 * Whether the executable belonging to this installation exists.
 */
main_reaper_exe_exists: boolean, 
/**
 * Targeted REAPER platform, derived from the OS and architecture for which ReaBoot itself
 * was compiled.
 */
inherent_reaper_platform: ReaperPlatform, };